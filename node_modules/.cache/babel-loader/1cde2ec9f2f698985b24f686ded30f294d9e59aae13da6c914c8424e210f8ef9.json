{"ast":null,"code":"var _jsxFileName = \"/Users/techi.s./Desktop/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  // since it is a list ,so we are using[]\n  const [newTask, setNewTask] = useState(\"\");\n  // newTask will be a string, so we are giving \"\"\\\n  const handleChange = event => {\n    set;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Write your todo list...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List of works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oHvYSOnzf7TdhowWf8ajOb8P9xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","newTask","setNewTask","handleChange","event","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/techi.s./Desktop/todo/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport { useState } from 'react';\nfunction App() {\n  const[todoList,setTodoList]=useState([]);  \n  // since it is a list ,so we are using[]\n  const [newTask,setNewTask]=useState(\"\");\n  // newTask will be a string, so we are giving \"\"\\\n  const handleChange = (event)=>{\n    set\n  }\n  return (\n    <div className=\"App\">\n      <div className='addTask'>\n        <p>TODO LIST</p>\n        <input placeholder = \"Write your todo list...\"  onChange={handleChange}/>\n        <button>Add Task</button>\n        <p>List of works</p>\n        <div className='list'>\n\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAM,CAACO,OAAO,EAACC,UAAU,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACvC;EACA,MAAMS,YAAY,GAAIC,KAAK,IAAG;IAC5BC,GAAG;EACL,CAAC;EACD,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBX,OAAA;QAAAW,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChBf,OAAA;QAAOgB,WAAW,EAAG,yBAAyB;QAAEC,QAAQ,EAAEV;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzEf,OAAA;QAAAW,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzBf,OAAA;QAAAW,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpBf,OAAA;QAAKU,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACb,EAAA,CAtBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}